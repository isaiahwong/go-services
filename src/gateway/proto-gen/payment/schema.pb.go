// Code generated by protoc-gen-go. DO NOT EDIT.
// source: payment/schema.proto

package payment

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Items struct {
	Id                   string        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Description          string        `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	Metadata             []byte        `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	TotalItems           int64         `protobuf:"varint,4,opt,name=total_items,json=totalItems,proto3" json:"total_items,omitempty"`
	Shipping             float64       `protobuf:"fixed64,5,opt,name=shipping,proto3" json:"shipping,omitempty"`
	Tax                  float64       `protobuf:"fixed64,6,opt,name=tax,proto3" json:"tax,omitempty"`
	ShippingDiscount     float64       `protobuf:"fixed64,7,opt,name=shipping_discount,json=shippingDiscount,proto3" json:"shipping_discount,omitempty"`
	Discount             float64       `protobuf:"fixed64,8,opt,name=discount,proto3" json:"discount,omitempty"`
	Currency             string        `protobuf:"bytes,9,opt,name=currency,proto3" json:"currency,omitempty"`
	Subtotal             float64       `protobuf:"fixed64,10,opt,name=subtotal,proto3" json:"subtotal,omitempty"`
	Data                 []*Items_Data `protobuf:"bytes,11,rep,name=data,proto3" json:"data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Items) Reset()         { *m = Items{} }
func (m *Items) String() string { return proto.CompactTextString(m) }
func (*Items) ProtoMessage()    {}
func (*Items) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8b1508ad426a70a, []int{0}
}

func (m *Items) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Items.Unmarshal(m, b)
}
func (m *Items) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Items.Marshal(b, m, deterministic)
}
func (m *Items) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Items.Merge(m, src)
}
func (m *Items) XXX_Size() int {
	return xxx_messageInfo_Items.Size(m)
}
func (m *Items) XXX_DiscardUnknown() {
	xxx_messageInfo_Items.DiscardUnknown(m)
}

var xxx_messageInfo_Items proto.InternalMessageInfo

func (m *Items) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Items) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *Items) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Items) GetTotalItems() int64 {
	if m != nil {
		return m.TotalItems
	}
	return 0
}

func (m *Items) GetShipping() float64 {
	if m != nil {
		return m.Shipping
	}
	return 0
}

func (m *Items) GetTax() float64 {
	if m != nil {
		return m.Tax
	}
	return 0
}

func (m *Items) GetShippingDiscount() float64 {
	if m != nil {
		return m.ShippingDiscount
	}
	return 0
}

func (m *Items) GetDiscount() float64 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *Items) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Items) GetSubtotal() float64 {
	if m != nil {
		return m.Subtotal
	}
	return 0
}

func (m *Items) GetData() []*Items_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

type Items_Data struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Amount               float64  `protobuf:"fixed64,3,opt,name=amount,proto3" json:"amount,omitempty"`
	Quantity             int64    `protobuf:"varint,4,opt,name=quantity,proto3" json:"quantity,omitempty"`
	Metadata             []byte   `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Currency             string   `protobuf:"bytes,6,opt,name=currency,proto3" json:"currency,omitempty"`
	Description          string   `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Items_Data) Reset()         { *m = Items_Data{} }
func (m *Items_Data) String() string { return proto.CompactTextString(m) }
func (*Items_Data) ProtoMessage()    {}
func (*Items_Data) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8b1508ad426a70a, []int{0, 0}
}

func (m *Items_Data) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Items_Data.Unmarshal(m, b)
}
func (m *Items_Data) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Items_Data.Marshal(b, m, deterministic)
}
func (m *Items_Data) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Items_Data.Merge(m, src)
}
func (m *Items_Data) XXX_Size() int {
	return xxx_messageInfo_Items_Data.Size(m)
}
func (m *Items_Data) XXX_DiscardUnknown() {
	xxx_messageInfo_Items_Data.DiscardUnknown(m)
}

var xxx_messageInfo_Items_Data proto.InternalMessageInfo

func (m *Items_Data) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Items_Data) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Items_Data) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Items_Data) GetQuantity() int64 {
	if m != nil {
		return m.Quantity
	}
	return 0
}

func (m *Items_Data) GetMetadata() []byte {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Items_Data) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Items_Data) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

type Refund struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Object               string   `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Transaction          string   `protobuf:"bytes,3,opt,name=transaction,proto3" json:"transaction,omitempty"`
	Amount               float64  `protobuf:"fixed64,4,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency             string   `protobuf:"bytes,5,opt,name=currency,proto3" json:"currency,omitempty"`
	Reason               string   `protobuf:"bytes,6,opt,name=reason,proto3" json:"reason,omitempty"`
	Status               string   `protobuf:"bytes,7,opt,name=status,proto3" json:"status,omitempty"`
	FailureRefund        string   `protobuf:"bytes,8,opt,name=failure_refund,json=failureRefund,proto3" json:"failure_refund,omitempty"`
	FailureReason        string   `protobuf:"bytes,9,opt,name=failure_reason,json=failureReason,proto3" json:"failure_reason,omitempty"`
	Updated              float64  `protobuf:"fixed64,10,opt,name=updated,proto3" json:"updated,omitempty"`
	Created              float64  `protobuf:"fixed64,11,opt,name=created,proto3" json:"created,omitempty"`
	StripeRefund         string   `protobuf:"bytes,12,opt,name=stripe_refund,json=stripeRefund,proto3" json:"stripe_refund,omitempty"`
	PaypalRefund         string   `protobuf:"bytes,13,opt,name=paypal_refund,json=paypalRefund,proto3" json:"paypal_refund,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Refund) Reset()         { *m = Refund{} }
func (m *Refund) String() string { return proto.CompactTextString(m) }
func (*Refund) ProtoMessage()    {}
func (*Refund) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8b1508ad426a70a, []int{1}
}

func (m *Refund) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Refund.Unmarshal(m, b)
}
func (m *Refund) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Refund.Marshal(b, m, deterministic)
}
func (m *Refund) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Refund.Merge(m, src)
}
func (m *Refund) XXX_Size() int {
	return xxx_messageInfo_Refund.Size(m)
}
func (m *Refund) XXX_DiscardUnknown() {
	xxx_messageInfo_Refund.DiscardUnknown(m)
}

var xxx_messageInfo_Refund proto.InternalMessageInfo

func (m *Refund) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Refund) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *Refund) GetTransaction() string {
	if m != nil {
		return m.Transaction
	}
	return ""
}

func (m *Refund) GetAmount() float64 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func (m *Refund) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Refund) GetReason() string {
	if m != nil {
		return m.Reason
	}
	return ""
}

func (m *Refund) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Refund) GetFailureRefund() string {
	if m != nil {
		return m.FailureRefund
	}
	return ""
}

func (m *Refund) GetFailureReason() string {
	if m != nil {
		return m.FailureReason
	}
	return ""
}

func (m *Refund) GetUpdated() float64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Refund) GetCreated() float64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Refund) GetStripeRefund() string {
	if m != nil {
		return m.StripeRefund
	}
	return ""
}

func (m *Refund) GetPaypalRefund() string {
	if m != nil {
		return m.PaypalRefund
	}
	return ""
}

type Transaction struct {
	Id                   string                        `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Object               string                        `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	Payment              string                        `protobuf:"bytes,3,opt,name=payment,proto3" json:"payment,omitempty"`
	User                 string                        `protobuf:"bytes,4,opt,name=user,proto3" json:"user,omitempty"`
	Refund               string                        `protobuf:"bytes,5,opt,name=refund,proto3" json:"refund,omitempty"`
	Email                string                        `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Provider             string                        `protobuf:"bytes,7,opt,name=provider,proto3" json:"provider,omitempty"`
	PaypalOrderId        string                        `protobuf:"bytes,8,opt,name=paypal_order_id,json=paypalOrderId,proto3" json:"paypal_order_id,omitempty"`
	StripePaymentIntent  string                        `protobuf:"bytes,9,opt,name=stripe_payment_intent,json=stripePaymentIntent,proto3" json:"stripe_payment_intent,omitempty"`
	Currency             string                        `protobuf:"bytes,10,opt,name=currency,proto3" json:"currency,omitempty"`
	Items                *Items                        `protobuf:"bytes,11,opt,name=items,proto3" json:"items,omitempty"`
	Total                float64                       `protobuf:"fixed64,12,opt,name=total,proto3" json:"total,omitempty"`
	Coupon               string                        `protobuf:"bytes,13,opt,name=coupon,proto3" json:"coupon,omitempty"`
	Status               string                        `protobuf:"bytes,14,opt,name=status,proto3" json:"status,omitempty"`
	Ip                   string                        `protobuf:"bytes,15,opt,name=ip,proto3" json:"ip,omitempty"`
	Updated              float64                       `protobuf:"fixed64,16,opt,name=updated,proto3" json:"updated,omitempty"`
	Created              float64                       `protobuf:"fixed64,17,opt,name=created,proto3" json:"created,omitempty"`
	TransitoryExpires    float64                       `protobuf:"fixed64,18,opt,name=transitory_expires,json=transitoryExpires,proto3" json:"transitory_expires,omitempty"`
	TransactionError     *Transaction_TransactionError `protobuf:"bytes,19,opt,name=transaction_error,json=transactionError,proto3" json:"transaction_error,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *Transaction) Reset()         { *m = Transaction{} }
func (m *Transaction) String() string { return proto.CompactTextString(m) }
func (*Transaction) ProtoMessage()    {}
func (*Transaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8b1508ad426a70a, []int{2}
}

func (m *Transaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction.Unmarshal(m, b)
}
func (m *Transaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction.Marshal(b, m, deterministic)
}
func (m *Transaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction.Merge(m, src)
}
func (m *Transaction) XXX_Size() int {
	return xxx_messageInfo_Transaction.Size(m)
}
func (m *Transaction) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction proto.InternalMessageInfo

func (m *Transaction) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Transaction) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *Transaction) GetPayment() string {
	if m != nil {
		return m.Payment
	}
	return ""
}

func (m *Transaction) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Transaction) GetRefund() string {
	if m != nil {
		return m.Refund
	}
	return ""
}

func (m *Transaction) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Transaction) GetProvider() string {
	if m != nil {
		return m.Provider
	}
	return ""
}

func (m *Transaction) GetPaypalOrderId() string {
	if m != nil {
		return m.PaypalOrderId
	}
	return ""
}

func (m *Transaction) GetStripePaymentIntent() string {
	if m != nil {
		return m.StripePaymentIntent
	}
	return ""
}

func (m *Transaction) GetCurrency() string {
	if m != nil {
		return m.Currency
	}
	return ""
}

func (m *Transaction) GetItems() *Items {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *Transaction) GetTotal() float64 {
	if m != nil {
		return m.Total
	}
	return 0
}

func (m *Transaction) GetCoupon() string {
	if m != nil {
		return m.Coupon
	}
	return ""
}

func (m *Transaction) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Transaction) GetIp() string {
	if m != nil {
		return m.Ip
	}
	return ""
}

func (m *Transaction) GetUpdated() float64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Transaction) GetCreated() float64 {
	if m != nil {
		return m.Created
	}
	return 0
}

func (m *Transaction) GetTransitoryExpires() float64 {
	if m != nil {
		return m.TransitoryExpires
	}
	return 0
}

func (m *Transaction) GetTransactionError() *Transaction_TransactionError {
	if m != nil {
		return m.TransactionError
	}
	return nil
}

type Transaction_TransactionError struct {
	Error                string   `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Type                 string   `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	StripeErrorCode      string   `protobuf:"bytes,4,opt,name=stripe_error_code,json=stripeErrorCode,proto3" json:"stripe_error_code,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Transaction_TransactionError) Reset()         { *m = Transaction_TransactionError{} }
func (m *Transaction_TransactionError) String() string { return proto.CompactTextString(m) }
func (*Transaction_TransactionError) ProtoMessage()    {}
func (*Transaction_TransactionError) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8b1508ad426a70a, []int{2, 0}
}

func (m *Transaction_TransactionError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transaction_TransactionError.Unmarshal(m, b)
}
func (m *Transaction_TransactionError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transaction_TransactionError.Marshal(b, m, deterministic)
}
func (m *Transaction_TransactionError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transaction_TransactionError.Merge(m, src)
}
func (m *Transaction_TransactionError) XXX_Size() int {
	return xxx_messageInfo_Transaction_TransactionError.Size(m)
}
func (m *Transaction_TransactionError) XXX_DiscardUnknown() {
	xxx_messageInfo_Transaction_TransactionError.DiscardUnknown(m)
}

var xxx_messageInfo_Transaction_TransactionError proto.InternalMessageInfo

func (m *Transaction_TransactionError) GetError() string {
	if m != nil {
		return m.Error
	}
	return ""
}

func (m *Transaction_TransactionError) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Transaction_TransactionError) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Transaction_TransactionError) GetStripeErrorCode() string {
	if m != nil {
		return m.StripeErrorCode
	}
	return ""
}

type Payment struct {
	Id                   string          `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Object               string          `protobuf:"bytes,2,opt,name=object,proto3" json:"object,omitempty"`
	User                 string          `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Email                string          `protobuf:"bytes,4,opt,name=email,proto3" json:"email,omitempty"`
	DefaultProvider      string          `protobuf:"bytes,5,opt,name=default_provider,json=defaultProvider,proto3" json:"default_provider,omitempty"`
	Stripe               *Payment_Stripe `protobuf:"bytes,6,opt,name=stripe,proto3" json:"stripe,omitempty"`
	Transactions         []*Transaction  `protobuf:"bytes,7,rep,name=transactions,proto3" json:"transactions,omitempty"`
	Updated              float64         `protobuf:"fixed64,8,opt,name=updated,proto3" json:"updated,omitempty"`
	Created              float64         `protobuf:"fixed64,9,opt,name=created,proto3" json:"created,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Payment) Reset()         { *m = Payment{} }
func (m *Payment) String() string { return proto.CompactTextString(m) }
func (*Payment) ProtoMessage()    {}
func (*Payment) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8b1508ad426a70a, []int{3}
}

func (m *Payment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payment.Unmarshal(m, b)
}
func (m *Payment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payment.Marshal(b, m, deterministic)
}
func (m *Payment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payment.Merge(m, src)
}
func (m *Payment) XXX_Size() int {
	return xxx_messageInfo_Payment.Size(m)
}
func (m *Payment) XXX_DiscardUnknown() {
	xxx_messageInfo_Payment.DiscardUnknown(m)
}

var xxx_messageInfo_Payment proto.InternalMessageInfo

func (m *Payment) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Payment) GetObject() string {
	if m != nil {
		return m.Object
	}
	return ""
}

func (m *Payment) GetUser() string {
	if m != nil {
		return m.User
	}
	return ""
}

func (m *Payment) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *Payment) GetDefaultProvider() string {
	if m != nil {
		return m.DefaultProvider
	}
	return ""
}

func (m *Payment) GetStripe() *Payment_Stripe {
	if m != nil {
		return m.Stripe
	}
	return nil
}

func (m *Payment) GetTransactions() []*Transaction {
	if m != nil {
		return m.Transactions
	}
	return nil
}

func (m *Payment) GetUpdated() float64 {
	if m != nil {
		return m.Updated
	}
	return 0
}

func (m *Payment) GetCreated() float64 {
	if m != nil {
		return m.Created
	}
	return 0
}

type Payment_Stripe struct {
	Customer             string   `protobuf:"bytes,1,opt,name=customer,proto3" json:"customer,omitempty"`
	DefaultPaymentMethod string   `protobuf:"bytes,2,opt,name=default_payment_method,json=defaultPaymentMethod,proto3" json:"default_payment_method,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Payment_Stripe) Reset()         { *m = Payment_Stripe{} }
func (m *Payment_Stripe) String() string { return proto.CompactTextString(m) }
func (*Payment_Stripe) ProtoMessage()    {}
func (*Payment_Stripe) Descriptor() ([]byte, []int) {
	return fileDescriptor_e8b1508ad426a70a, []int{3, 0}
}

func (m *Payment_Stripe) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Payment_Stripe.Unmarshal(m, b)
}
func (m *Payment_Stripe) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Payment_Stripe.Marshal(b, m, deterministic)
}
func (m *Payment_Stripe) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Payment_Stripe.Merge(m, src)
}
func (m *Payment_Stripe) XXX_Size() int {
	return xxx_messageInfo_Payment_Stripe.Size(m)
}
func (m *Payment_Stripe) XXX_DiscardUnknown() {
	xxx_messageInfo_Payment_Stripe.DiscardUnknown(m)
}

var xxx_messageInfo_Payment_Stripe proto.InternalMessageInfo

func (m *Payment_Stripe) GetCustomer() string {
	if m != nil {
		return m.Customer
	}
	return ""
}

func (m *Payment_Stripe) GetDefaultPaymentMethod() string {
	if m != nil {
		return m.DefaultPaymentMethod
	}
	return ""
}

func init() {
	proto.RegisterType((*Items)(nil), "payment.Items")
	proto.RegisterType((*Items_Data)(nil), "payment.Items.Data")
	proto.RegisterType((*Refund)(nil), "payment.Refund")
	proto.RegisterType((*Transaction)(nil), "payment.Transaction")
	proto.RegisterType((*Transaction_TransactionError)(nil), "payment.Transaction.TransactionError")
	proto.RegisterType((*Payment)(nil), "payment.Payment")
	proto.RegisterType((*Payment_Stripe)(nil), "payment.Payment.Stripe")
}

func init() { proto.RegisterFile("payment/schema.proto", fileDescriptor_e8b1508ad426a70a) }

var fileDescriptor_e8b1508ad426a70a = []byte{
	// 848 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x55, 0xc1, 0x72, 0xe3, 0x44,
	0x10, 0x2d, 0x45, 0x96, 0x1c, 0xb7, 0x9c, 0xc4, 0x9e, 0x84, 0xa0, 0xf2, 0x05, 0x57, 0x96, 0x05,
	0x03, 0x85, 0xb7, 0x2a, 0x70, 0xe0, 0xce, 0xee, 0x21, 0x07, 0x8a, 0x2d, 0xc1, 0x89, 0x8b, 0x6a,
	0xa2, 0x99, 0x6c, 0x86, 0xb2, 0x34, 0x62, 0x34, 0xa2, 0xd6, 0x47, 0xf6, 0xc6, 0x1f, 0xf1, 0x33,
	0xfc, 0x0b, 0x35, 0x3d, 0x2d, 0xad, 0xa4, 0xb0, 0x55, 0x7b, 0x9b, 0xd7, 0xaf, 0x3d, 0xd3, 0xdd,
	0xef, 0xb5, 0x0c, 0x57, 0x35, 0x3f, 0x96, 0xb2, 0xb2, 0x2f, 0x9a, 0xe2, 0x51, 0x96, 0x7c, 0x5f,
	0x1b, 0x6d, 0x35, 0x9b, 0x53, 0x74, 0xf3, 0x9e, 0xb6, 0x46, 0xd5, 0xd2, 0xd3, 0x37, 0x7f, 0xcf,
	0x20, 0xba, 0xb3, 0xb2, 0x6c, 0xd8, 0x39, 0x9c, 0x28, 0x91, 0x06, 0xdb, 0x60, 0xb7, 0xc8, 0x4e,
	0x94, 0x60, 0x5b, 0x48, 0x84, 0x6c, 0x0a, 0xa3, 0x6a, 0xab, 0x74, 0x95, 0x9e, 0x20, 0x31, 0x0c,
	0xb1, 0x0d, 0x9c, 0x96, 0xd2, 0x72, 0xc1, 0x2d, 0x4f, 0xc3, 0x6d, 0xb0, 0x5b, 0x66, 0x3d, 0x66,
	0x9f, 0x41, 0x62, 0xb5, 0xe5, 0x87, 0x5c, 0xb9, 0xcb, 0xd3, 0xd9, 0x36, 0xd8, 0x85, 0x19, 0x60,
	0xc8, 0x3f, 0xb7, 0x81, 0xd3, 0xe6, 0x51, 0xd5, 0xb5, 0xaa, 0xde, 0xa4, 0xd1, 0x36, 0xd8, 0x05,
	0x59, 0x8f, 0xd9, 0x0a, 0x42, 0xcb, 0xdf, 0xa6, 0x31, 0x86, 0xdd, 0x91, 0x7d, 0x03, 0xeb, 0x8e,
	0xcd, 0x85, 0x6a, 0x0a, 0xdd, 0x56, 0x36, 0x9d, 0x23, 0xbf, 0xea, 0x88, 0x97, 0x14, 0x77, 0x57,
	0xf7, 0x39, 0xa7, 0xfe, 0x6a, 0x31, 0xe0, 0x8a, 0xd6, 0x18, 0x59, 0x15, 0xc7, 0x74, 0x81, 0x2d,
	0xf5, 0x18, 0x4b, 0x6a, 0xef, 0xb1, 0xc6, 0x14, 0xa8, 0x24, 0xc2, 0xec, 0x4b, 0x98, 0x61, 0x9f,
	0xc9, 0x36, 0xdc, 0x25, 0xb7, 0x97, 0x7b, 0x1a, 0xe6, 0x1e, 0x9b, 0xd9, 0xbf, 0xe4, 0x96, 0x67,
	0x98, 0xb0, 0xf9, 0x27, 0x80, 0x99, 0x83, 0x4f, 0xe6, 0xc9, 0x60, 0x56, 0xf1, 0x52, 0xd2, 0x20,
	0xf1, 0xcc, 0xae, 0x21, 0xe6, 0x25, 0xd6, 0x19, 0xe2, 0x7b, 0x84, 0x5c, 0x25, 0x7f, 0xb4, 0xbc,
	0xb2, 0xca, 0x1e, 0x69, 0x74, 0x3d, 0x1e, 0x4d, 0x3d, 0x9a, 0x4c, 0x7d, 0xd8, 0x5d, 0x3c, 0xe9,
	0x6e, 0xa2, 0xe7, 0xfc, 0x89, 0x9e, 0x37, 0xef, 0x42, 0x88, 0x33, 0xf9, 0xd0, 0x56, 0xe2, 0x49,
	0xf1, 0xd7, 0x10, 0xeb, 0xfb, 0xdf, 0x65, 0x61, 0xa9, 0x7c, 0x42, 0xee, 0x52, 0x6b, 0x78, 0xd5,
	0xf0, 0x02, 0x2f, 0x0d, 0xfd, 0xa5, 0x83, 0xd0, 0xa0, 0xc5, 0xd9, 0xb4, 0xc5, 0xbe, 0xd4, 0x68,
	0x52, 0xea, 0x35, 0xc4, 0x46, 0xf2, 0x46, 0x57, 0xd4, 0x04, 0x21, 0x17, 0x6f, 0x2c, 0xb7, 0x6d,
	0x43, 0xd5, 0x13, 0x62, 0xcf, 0xe1, 0xfc, 0x81, 0xab, 0x43, 0x6b, 0x64, 0x6e, 0xb0, 0x7e, 0x94,
	0x7d, 0x91, 0x9d, 0x51, 0x94, 0x9a, 0x1a, 0xa5, 0xe1, 0xf5, 0x8b, 0x49, 0x1a, 0xbe, 0x92, 0xc2,
	0xbc, 0xad, 0x05, 0xb7, 0x52, 0x90, 0x0b, 0x3a, 0xe8, 0x98, 0xc2, 0x48, 0x64, 0x12, 0xcf, 0x10,
	0x64, 0xcf, 0xe0, 0xcc, 0xaf, 0x55, 0x57, 0xc0, 0x12, 0x6f, 0x5e, 0xfa, 0x20, 0xbd, 0xff, 0x0c,
	0xce, 0x6a, 0x7e, 0xac, 0xf9, 0xa1, 0x4b, 0x3a, 0xf3, 0x49, 0x3e, 0xe8, 0x93, 0x6e, 0xfe, 0x8d,
	0x20, 0xf9, 0x75, 0x30, 0xbf, 0x8f, 0x55, 0x22, 0x85, 0x6e, 0xd3, 0x49, 0x85, 0x0e, 0x3a, 0xe3,
	0xb5, 0x8d, 0x34, 0x38, 0xff, 0x45, 0x86, 0x67, 0x3f, 0x61, 0xac, 0x21, 0xea, 0x26, 0x8c, 0x25,
	0x5e, 0x41, 0x24, 0x4b, 0xae, 0x0e, 0x34, 0x78, 0x0f, 0x9c, 0x56, 0xb5, 0xd1, 0x7f, 0x2a, 0x21,
	0x0d, 0x4d, 0xbe, 0xc7, 0xec, 0x0b, 0xb8, 0xa0, 0xa6, 0xb4, 0x11, 0xd2, 0xe4, 0xaa, 0x1f, 0xbe,
	0x0f, 0xff, 0xec, 0xa2, 0x77, 0x82, 0xdd, 0xc2, 0x27, 0x34, 0x21, 0xaa, 0x2b, 0x57, 0x95, 0x75,
	0xd5, 0x7a, 0x0d, 0x2e, 0x3d, 0xf9, 0xda, 0x73, 0x77, 0x48, 0x8d, 0x3c, 0x02, 0x13, 0x8f, 0x7c,
	0x0e, 0x91, 0xff, 0xb4, 0x38, 0x25, 0x92, 0xdb, 0xf3, 0xf1, 0x46, 0x66, 0x9e, 0x74, 0xfd, 0xf8,
	0x7d, 0x5e, 0xa2, 0x5e, 0x1e, 0xb8, 0xee, 0x0b, 0xdd, 0xd6, 0xba, 0x22, 0x05, 0x08, 0x0d, 0xfc,
	0x75, 0x3e, 0xf2, 0x97, 0xd3, 0xa0, 0x4e, 0x2f, 0x48, 0x83, 0x7a, 0xe8, 0x90, 0xd5, 0x07, 0x1d,
	0xb2, 0x1e, 0x3b, 0xe4, 0x5b, 0x60, 0xb8, 0x16, 0xca, 0x6a, 0x73, 0xcc, 0xe5, 0xdb, 0x5a, 0x19,
	0xd9, 0xa4, 0x0c, 0x93, 0xd6, 0xef, 0x99, 0x57, 0x9e, 0x60, 0x19, 0xac, 0x07, 0x5b, 0x94, 0x4b,
	0x63, 0xb4, 0x49, 0x2f, 0xb1, 0xd5, 0xe7, 0x7d, 0xab, 0x03, 0x9f, 0x0c, 0xcf, 0xaf, 0x5c, 0x72,
	0xb6, 0xb2, 0x93, 0xc8, 0xe6, 0x5d, 0x00, 0xab, 0x69, 0x1a, 0x2a, 0x8e, 0x97, 0x07, 0xa4, 0x38,
	0x46, 0x19, 0xcc, 0xec, 0xb1, 0xee, 0x3f, 0x56, 0xee, 0xec, 0x7a, 0x2b, 0x65, 0xd3, 0xf0, 0x37,
	0xb2, 0x73, 0x18, 0x41, 0xf6, 0x35, 0xac, 0x49, 0x5b, 0xfc, 0x75, 0x5e, 0x68, 0x21, 0xc9, 0x6e,
	0x17, 0x9e, 0xc0, 0xb7, 0x7e, 0xd4, 0x42, 0xde, 0xfc, 0x15, 0xc2, 0x9c, 0x54, 0xfe, 0x68, 0x6f,
	0x77, 0x0e, 0x0e, 0x07, 0x0e, 0xee, 0x9d, 0x3a, 0x1b, 0x3a, 0xf5, 0x2b, 0x58, 0x09, 0xf9, 0xc0,
	0xdb, 0x83, 0xcd, 0x7b, 0xc7, 0x7a, 0x87, 0x5f, 0x50, 0xfc, 0x75, 0x67, 0xdc, 0x17, 0x4e, 0x6c,
	0x57, 0x1b, 0x7a, 0x3d, 0xb9, 0xfd, 0xb4, 0x1f, 0x2b, 0x95, 0xb7, 0xff, 0xc5, 0x2f, 0x2f, 0xa5,
	0xb1, 0x1f, 0x60, 0x39, 0x18, 0xa9, 0xfb, 0x06, 0xb9, 0xbf, 0x82, 0xab, 0xff, 0x53, 0x23, 0x1b,
	0x65, 0x0e, 0xfd, 0x72, 0xfa, 0x41, 0xbf, 0x2c, 0x46, 0x7e, 0xd9, 0xfc, 0x06, 0xb1, 0x7f, 0xdf,
	0x6f, 0x41, 0x63, 0x75, 0x29, 0x3b, 0x91, 0x7a, 0xcc, 0xbe, 0x87, 0xeb, 0xbe, 0x5f, 0x5a, 0xab,
	0x52, 0xda, 0x47, 0x2d, 0x68, 0x82, 0x57, 0x5d, 0xd7, 0x9e, 0xfc, 0x09, 0xb9, 0xfb, 0x18, 0xff,
	0xfb, 0xbf, 0xfb, 0x2f, 0x00, 0x00, 0xff, 0xff, 0x07, 0x1f, 0x85, 0xfd, 0x32, 0x08, 0x00, 0x00,
}
